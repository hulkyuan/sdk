import IAction from '../IAction';
import { transformData, utf16to8, utf8to16 } from '../DataFormat';
import IResponse from './issueEInvoice/IResponse';
import { parseString } from 'xml2js';
import builder from 'xmlbuilder';
import base64 from 'base-64';
import { toAt } from '../DataFormat';
import request from 'superagent';
import IRequest from './IRequest';

//模拟开票
export default class MoNi implements IAction {
    mockDayin = {
        "business": {
            "_comment": "发票打印",
            "_id": "FPDY",
            "body": {
                "_yylxdm": "1",
                "input": {
                    "jspbh": "661502047680",
                    "fplxdm": "0",
                    "fpdm": "3200192130",
                    "fphm": "25617902",
                    "isShowDlg": "0",
                    "isQdPrint": "0"
                }
            }
        }
    };
    mockZuofei = {
        "business": {
            "_comment": "发票作废",
            "_id": "FPZF",
            "body": {
                "_yylxdm": "1",
                "input": {
                    "jspbh": "661502047680",
                    "fpdm": "3200192130",
                    "fphm": "25610918",
                    "fplxdm": "0"
                }
            }
        }
    };
    mockKaiju = {
        "business": {
            "_comment": "发票开具",
            "_id": "FPKJ",
            "body": {
                "_yylxdm": "1",
                "input": {
                    "jspbh": "345435",
                    "fplsh": "260019591380992",
                    "fplxdm": "0",
                    "kplx": "0",
                    "tspz": "00",
                    "xhdwsbh": "91320102575938948G",
                    "xhdwmc": "南京苏宁易购电子商务有限公司",
                    "xhdwdzdh": "南京市玄武区玄武大道699-19号8幢 电话025-66996699",
                    "xhdwyhzh": "中国建设银行南京徐庄软件园支行 32001881436052508322",
                    "ghdwsbh": "91110106MA005RPX7Y",
                    "ghdwmc": "国电(北京)配送中心有限公司",
                    "ghdwdzdh": "北京市丰台区南四环西路188号十二区17号楼2层-1号（园区）010-58688415",
                    "ghdwyhzh": "建行北京宣武支行11050167360000000932",
                    "bmbbbh": "",
                    "hsslbs": "0",
                    "hzfw": "",
                    "isMutiRate": "0",
                    "fyxm": {
                        "_count": "1",
                        "group": {
                            "_xh": "1",
                            "fphxz": "0",
                            "spmc": "得力0012订书钉24/6统一订书针 12号标准型钉书针 50盒 总共50000枚",
                            "spsm": "",
                            "ggxh": "0012",
                            "dw": "件",
                            "spsl": "1.000000",
                            "dj": "62.830000",
                            "je": "62.83",
                            "kcje": "",
                            "sl": "0.13",
                            "se": "8.17",
                            "hsbz": "0",
                            "spbm": "1090222060000000000",
                            "zxbm": "",
                            "yhzcbs": "0",
                            "slbs": "",
                            "zzstsgl": ""
                        }
                    },
                    "zhsl": "0.13",
                    "hjje": "62.83",
                    "hjse": "8.17",
                    "jshj": "71.00",
                    "bz": "KPTZ20191118090434",
                    "skr": "周晓曼",
                    "fhr": "张伟伟",
                    "kpr": "李晓云",
                    "zyspmc": "得力0012订书钉24/6统一订书针 12号标准型钉书针 50盒 总共50000枚",
                    "spsm": "",
                    "qdbz": "0",
                    "ssyf": "",
                    "kpjh": "",
                    "tzdbh": "",
                    "yfpdm": "",
                    "yfphm": ""
                }
            }
        }
    };
    mockCurrent = {
        "business": {
            "_comment": "获取当前发票代码号码",
            "_id": "Hqdqfpdmhm",
            "body": {
                "_yylxdm": "1",
                "input": {
                    "fplxdm": "2"
                }
            }
        }
    }
    mockChaxun = {
        "business": {
            "_comment": "发票查询",
            "_id": "Fpcx",
            "body": {
                "_yylxdm": "1",
                "input": {
                    "fplxdm": "2",
                    "fplsh": "260019591380992",//发票流水号（输入此字段后，其他字段都为空即可）
                    "fpdm": "3200192130",
                    "fphm": "25610918",
                }
            }
        }
    }
    request: IRequest;
    //<?xml version="1.0" encoding="utf-8"?>
    // <business comment="发票开具" id="Fpkj">
    // <body yylxdm="1">
    //   <output>
    //     <fplxdm>发票类型代码</fplxdm>
    //     <fpdm>发票代码</fpdm>
    //     <fphm>发票号码</fphm>
    //     <kprq>开票日期</kprq>
    //     <hjje>合计金额</hjje>
    //     <hjse>合计税额</hjse>
    //     <jym>校验码（专票为空）</jym>
    //     <returncode>0</returncode>
    //     <returnmsg>成功</returnmsg>
    // <fplsh>发票流水号</fplsh>
    // </output>
    // </body>
    // </business>
    /**
     * 发票开具
     */
    fpkj = (url, data) => {
        return this.createInvoice();
    }
    fpdy = (url, data) => {
        this.send(url, this.mockDayin);
    }
    fpzf = (url, data) => {
        return this.createInvoice();
    }
    //获取当前开票代码号码
    //返回：
    //<?xml version="1.0" encoding="utf-8"?>
    // <business comment="获取当前发票代码号码" id="Hqdqfpdmhm">
    // <body yylxdm="1">
    //   <output>
    //     <returncode>0</returncode>
    //     <returnmsg>成功</returnmsg>
    //     <data><![CDATA[<?xml version="1.0" encoding="utf-8"?><data><fpzl>2</fpzl><fpdm>3400143320</fpdm><fphm>00458559</fphm></data>]]></data>
    //   </output>
    // </body>
    // </business>

    fphm = (url) => {
        return this.createInvoice();
    }
    fpcx = (url, data) => {
        return this.createInvoice();
    }
    send = (url, data) => {
        // 真实开票用到的请求，将js对象转换xml字符串
        const reqXml = builder.create(toAt(transformData('moni', data))).end({ pretty: true });
        const encodeData: string = base64.encode(utf16to8(reqXml));
        const response = this.Seeya(url, { args: encodeData });
        return response;
    }
    Seeya = (url: string, data: IRequest) => {
        return request.post(url).type('form').send(data).then(res => {
            const response: IResponse = utf8to16(base64.decode(res.body));
            console.log(JSON.stringify(response));
            return response;
        }).then(res => {
            return new Promise((resolve, reject) => {
                parseString(
                    res,
                    { explicitArray: false },
                    (err, result: any) => {
                        if (err) {
                            return reject(err);
                        }
                        console.log('result', result);
                        resolve(result);
                    }
                );
            });
        });
    }
    /**
     * 随机生成一个发票信息
     */
    createInvoice = () => {
        let invoiceNum = this.randomNum(this.randomNum(this.randomNum(this.randomNum(this.randomNum(this.randomNum(this.randomNum(this.randomNum())))))));
        let invoiceArr = [
            { invoiceCode: '2200173130', invoiceNum: invoiceNum, invoiceType: 'VAT_SPECIAL_INVOICE',InvoiceCheckCode:'', IssueDate: new Date().getTime(), code: 0 ,TaxExclusiveTotalAmount:this.randomNum(this.randomNum(this.randomNum(this.randomNum('1')))),TaxTotalAmount:'32'},
            { invoiceCode: '2200173160', invoiceNum: invoiceNum, invoiceType: 'VAT_SPECIAL_INVOICE',InvoiceCheckCode:'', IssueDate: new Date().getTime(), code: 0 ,TaxExclusiveTotalAmount:this.randomNum(this.randomNum(this.randomNum(this.randomNum('1')))),TaxTotalAmount:'32'},
            { invoiceCode: '050001700111', invoiceNum: invoiceNum, invoiceType: 'VAT_INVOICE_ELECTRONIC',InvoiceCheckCode:'681858', IssueDate: new Date().getTime(), code: 0 ,TaxExclusiveTotalAmount:this.randomNum(this.randomNum(this.randomNum(this.randomNum('1')))),TaxTotalAmount:'32'},
            { invoiceCode: '3300172320', invoiceNum: invoiceNum, invoiceType: 'VAT_INVOICE',InvoiceCheckCode:'513563', IssueDate: new Date().getTime(), code: 0 ,TaxExclusiveTotalAmount:this.randomNum(this.randomNum(this.randomNum(this.randomNum('1')))),TaxTotalAmount:'32'},
        ];
        return new Promise(function(resolve, reject) {
            setTimeout(function() {
              resolve(invoiceArr[Math.round(Math.random() * (invoiceArr.length - 1))]);
            }, 300);
          })
        //return invoiceArr[Math.round(Math.random() * (invoiceArr.length - 1))];
    }
    randomNum = (str: string = '') => {
        return str + Math.round(Math.random() * 10).toString();
    }
} 